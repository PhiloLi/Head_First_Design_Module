1、Pizza 产品的抽象
  PizzaStore 抽象的创建者
  NYPizzaStore 具体创建者
  NYStyleClam 具体的产品
2、工厂方法模式：定义了一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。
3、工厂方法用来处理对象的创建，并将这样的行为封装在子类中。
       当只有一个具体的创建者时，工厂方法依然很有用，因为它帮助我们将产品的“实现”从使用中解耦。增加产品和改变产品，抽象的创建者都不会受到影响。（因为创建者与任何集体的产品
      之间都不是紧耦合。）
4、依赖倒置原则：要依赖抽象，不要依赖具体类。
      不能让高层组件依赖低层组件，而且，不管高层或低层，都应该依赖于抽象。（高层，是由其他低层组件定义其行为的类。PizzaStore）
5、几个知道原则避免在设计中违反依赖倒置：
  1）变量不可以持有具体类的引用。
  2）不要让类派生自具体类。
  3）不要覆盖基类中已实现的方法。
